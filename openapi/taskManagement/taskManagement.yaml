openapi: 3.0.0
info:
  title: Task Management
  description: ''
  version: Evergreen
servers:
  - url: 'https://prod.apigateway.co'
    description: Production
  - description: Demo
    url: 'https://demo.apigateway.co'
  - description: Localhost
    url: '{localhost}'
paths:
  /tasks/fulfillmentTasks:
    get:
      summary: List Fulfillment Tasks
      tags:
        - tasks
      security:
        - OAuth:
            - task
            - 'task:read'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/fulfillmentTasks'
                  meta:
                    type: object
                    properties:
                      total:
                        type: number
                        description: The total number of tasks that matched the filters. If this is greator than what has been returned so far you will see a URI to get the next batch at `links.next`
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        format: uri
                      prior:
                        type: string
                        format: uri
                      self:
                        type: string
                        description: ''
                        format: uri
                      next:
                        type: string
                        format: uri
                      last:
                        type: string
                        format: uri
                  included:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/fulfillmentTasks'
                        - $ref: '#/components/schemas/fulfillmentAttachments'
      operationId: get-tasks-fulfillmentTasks
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
          in: query
          name: 'filter[owner.id]'
          description: The ID of the organization that created this task
        - schema:
            type: string
          in: query
          name: 'filter[customer.id]'
          description: Only return tasks that were created to track work for this organization id. Multiple values may be specified.
        - schema:
            type: string
          in: query
          name: 'filter[status.code]'
          description: Only return tasks with a status having one of the listed codes
        - schema:
            type: string
          in: query
          name: 'filter[status.code][!=]'
          description: A comma seperated list of task status codes to be excluded from the results.
        - schema:
            type: string
          in: query
          name: 'filter[assignee.id]'
          description: Only return tasks that are assigned to one of the listed users. Use the value "Unassigned" to include tasks that are not currently assigned to anyone.
        - schema:
            type: string
            enum:
              - custom
              - listing
              - mention
              - socialPost
              - onboarding
              - socialize
              - googleQA
              - review
              - meeting
              - project
              - customSubtask
              - contentCallSubtask
              - clientReviewSubtask
              - scheduledSocialPostSubtask
          in: query
          name: 'filter[typeCode]'
          description: Only return tasks that are of a type in the list
        - schema:
            type: string
            enum:
              - custom
              - listing
              - mention
              - socialPost
              - onboarding
              - socialize
              - googleQA
              - review
              - meeting
              - project
              - customSubtask
              - contentCallSubtask
              - clientReviewSubtask
              - scheduledSocialPostSubtask
          in: query
          name: 'filter[typeCode][!=]'
          description: A comma seperated list of task type codes to be excluded from the results.
        - schema:
            type: string
          in: query
          name: 'filter[project.id]'
          description: Only return subtasks that are part of one of the specified projects
        - schema:
            type: string
          in: query
          name: 'filter[title][~]'
          description: Filter the list to tasks with a name similar to the specified value.
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[createdAt][>]'
          description: Only show tasks created after the specified time
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[createdAt][<=]'
          description: Only show tasks created before the specified time
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[dueAt][>]'
          description: Only show tasks due after the specified time
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[dueAt][<=]'
          description: Only show tasks due before the specified time
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[completedAt][>]'
          description: |-
            Only show tasks completed after the specified time.
            To search for tasks with a blank completed date use `filter[status.code][!=]="COMPLETED"`
        - schema:
            type: string
            format: date-time
          in: query
          name: 'filter[completedDate][<=]'
          description: |-
            Only show tasks completed before the specified time.
            To search for tasks with a blank completed date use `filter[status.code][!=]="COMPLETED"`
        - schema:
            type: boolean
          in: query
          name: 'filter[enableCustomerFeedback]'
          description: Only show tasks that have allowed the buyer to provide feedback.
        - schema:
            type: boolean
          in: query
          name: 'filter[visableToCustomer]'
          description: |-
            Only show tasks that can be viewed by the buyer. 
            Note: This endpoint should not be used when displaying the tasks to the buyer. Use the `/tasks/buyerTasks` endpoint instead.
        - schema:
            type: string
          in: query
          name: 'filter[id]'
          description: A comma seperated list of tasks to be returned by ID
        - schema:
            type: string
            enum:
              - type
              - '-type'
              - title
              - '-title'
              - dueDate
              - '-dueDate'
              - completionDate
              - '-completionDate'
              - createdDate
              - '-createdDate'
          in: query
          name: sort
          description: A comma seperated list of attributes to sort the results by. You may prefix the attribute name with a `-` to sort decending.
        - schema:
            type: integer
            default: 10
            minimum: 0
            maximum: 50
          in: query
          name: 'page[limit]'
          description: 'The maximum number of tasks you would like returned in a single batch. Use the `links.next` member in the response to get the remainder. '
        - schema:
            type: string
          in: query
          name: 'page[cursor]'
          description: The cursor stores all your filters and current location in the list to allow paging over the results in smaller batches. The value will be provided in the response links.
        - schema:
            type: string
            enum:
              - project
              - dependsOn
              - subtasks
              - status
              - attachments
          in: query
          name: include
          description: A list of related resources to be included in the response.
        - schema:
            type: string
          in: query
          name: 'fields[tasks-fulfillmentTasks]'
          description: |-
            A list of field paths from the `tasks-fulfillmentTasks` model that should be included in the response.

            It is best practice to always include this field to aid in API evolution.
        - schema:
            type: string
          in: query
          name: 'fields[tasks-fulfillmentAttachments]'
          description: A list of field paths from the `tasks-fulfillmentAttachments` model that should be included in the response when `include=attachments`.
        - schema:
            type: string
          in: query
          name: 'fields[tasks-fulfillmentStatuses]'
          description: A list of field paths from the `tasks-fulfillmentStatuses` model that should be included in the response when `include=status`.
      description: 'Produce a list a of tasks for a fulfillment agent based on the specified filters. '
    parameters: []
    post:
      summary: Create Fulfillment Task
      tags:
        - tasks
      security:
        - OAuth:
            - task
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      operationId: post-tasks-fulfillmentTasks
      responses:
        '201':
          description: Created
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/fulfillmentTasks'
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The URI of the newly created task
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/fulfillmentCreateProject'
                - $ref: '#/components/schemas/fulfillmentCreateCustomTask'
                - $ref: '#/components/schemas/fulfillmentCreateCustomSubtask'
        description: ''
      description: Create a new task
  '/tasks/fulfillmentTasks/{id}':
    parameters:
      - schema:
          type: string
          example: TK-7828EC895B6A0C9AACA43AC802730B0F4A9EE4A1
        name: id
        in: path
        required: true
        description: The ID of the task to be updated
    get:
      summary: Get Fulfillment Task
      tags:
        - tasks
      security:
        - OAuth:
            - task
            - 'task:read'
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/fulfillmentTasks'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
      operationId: get-tasks-fulfillmentTasks-id
      description: Get a single fulfillment task by ID
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
            enum:
              - project
              - dependsOn
              - subtasks
              - status
              - attachments
          in: query
          name: include
          description: A list of related resources to be included in the response.
        - schema:
            type: string
          in: query
          name: 'fields[tasks-fulfillmentTasks]'
          description: |-
            A list of field paths from the `tasks-fulfillmentTasks` model that should be included in the response.

            It is best practice to always include this field to aid in API evolution.
        - schema:
            type: string
          in: query
          name: 'fields[tasks-fulfillmentAttachments]'
          description: A list of field paths from the `tasks-fulfillmentAttachments` model that should be included in the response when `include=attachments`.
        - schema:
            type: string
          in: query
          name: 'fields[tasks-fulfillmentStatuses]'
          description: A list of field paths from the `tasks-fulfillmentStatuses` model that should be included in the response when `include=status`.
    patch:
      summary: Update Fulfillment Task
      tags:
        - tasks
      security:
        - OAuth:
            - task
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      operationId: patch-tasks-fulfillmentTasks-id
      responses:
        '200':
          description: OK - Updated record
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/fulfillmentTasks'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
      description: 'Update the fields of the fulfillment task. '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/fulfillmentTasks'
        description: 'You should only send attributes and relationships that have changed. '
    delete:
      summary: Delete Fulfillment Task
      tags:
        - tasks
      security:
        - OAuth:
            - task
      operationId: delete-tasks-fulfillmentTasks-id
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      responses:
        '204':
          description: No Content
      description: Soft delete the task with the specified ID from the system
  '/tasks/fulfillmentTasks/{taskId}/attachments':
    parameters:
      - schema:
          type: string
        name: taskId
        in: path
        required: true
    get:
      summary: List attachments for the Fulfillment Task
      tags:
        - tasks
      security:
        - OAuth:
            - task
            - 'task:read'
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/fulfillmentAttachments'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
      operationId: get-tasks-fulfillmentTasks-taskId-attachments
      description: Returns the details of the attachments related to the specified task
  /tasks/fulfillmentAttachments:
    get:
      summary: List Fulfillment Attachments
      tags:
        - tasks
      security:
        - OAuth:
            - task
            - 'task:read'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/fulfillmentAttachments'
                  links:
                    type: object
      operationId: get-tasks-fulfillmentAttachments
      description: Produce a list of task attachments sutible for a fulfillment agent
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
          in: query
          name: 'fields[tasks-fulfillmentAttachments]'
          description: |-
            A list of field paths from the `tasks-fulfillmentAttachments` model that should be included in the response.

            It is best practice to always include this field to aid in API evolution.
        - schema:
            type: string
          in: query
          name: 'filter[tasks.id]'
          description: Only include attachments that relate to one of the specified task ids
        - schema:
            type: string
          in: query
          name: 'filter[customer.id]'
          description: Only return attachments that relate to tasks for the specified customer id.
        - schema:
            type: boolean
          in: query
          name: 'filter[visableToCustomer]'
          description: Only return attachments that are/are not able to be seen by customers
    post:
      summary: Create Fulfillment Attachment
      tags:
        - tasks
      security:
        - OAuth:
            - task
      operationId: post-tasks-fulfillmentAttachments
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/fulfillmentAttachments'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
      description: 'Use this operation to record the meta data about the file attachment. The response body will include an `links.upload` member containing a URI that you should make a PUT request to with the content of the file. '
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/fulfillmentCreateAttachments'
  '/tasks/fulfillmentAttachments/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Fulfillment Attachment
      tags:
        - tasks
      security:
        - OAuth:
            - task
            - 'task:read'
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/fulfillmentAttachments'
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        format: uri
      operationId: get-tasks-fulfillmentAttachments-id
      description: Returns the details about a specific attachment
  /tasks/fulfillmentCustomers:
    get:
      summary: List Fulfillment Customers
      tags:
        - tasks
      security:
        - OAuth:
            - task
            - 'task:read'
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
      responses: {}
      operationId: get-tasks-fulfillmentCustomers
      description: '`Proposed`: A way to list customer accounts that tasks can be created for has been proposed but the design is being reconsidered in favor of a single platform wide resouce.'
  /tasks/fulfillmentStatuses:
    get:
      summary: List Fulfillment Statuses
      tags:
        - tasks
      security:
        - OAuth:
            - task
            - 'task:read'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/taskStatus'
      operationId: get-tasks-fulfillmentStatuses
      description: |-
        Returns a list of statues that can be used for tasks. 
        Note: Not all statuses can be used by all tasks. 
      parameters:
        - schema:
            type: string
            example: Bearer <Access Token>
          in: header
          name: Authorization
          description: A Bearer access token to identify the user the app is acting on behalf of. See the Authorization guide for details.
          required: true
        - schema:
            type: string
          in: query
          name: 'filter[owner.id]'
components:
  schemas:
    taskStatus:
      title: taskStatus
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            name:
              type: string
            code:
              type: string
            color:
              type: string
    fulfillmentAttachments:
      title: Fulfillment Attachments
      type: object
      description: Attachments can be created and deleted but not updated.
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - tasks-fulfillmentAttachments
        attributes:
          type: object
          properties:
            filename:
              type: string
              description: The name of the file with extention that should be presented to users
            contentType:
              type: string
              description: The MIME type used to describe the attached file's contents
            contentHash:
              type: string
              description: A MD5 hash of the file contents. This can be used to verify that the uploaded content matches your local version.
            visableToCustomer:
              type: boolean
              description: 'Indicates that this attachment can be viewed by customers. It only applies when the containing task is visable to customers as well. '
        links:
          type: object
          properties:
            download:
              type: string
              format: uri
              description: Once content has been uploaded a GET request may be made to this URI to fetch the file contents.
            upload:
              type: string
              description: 'If the file has not been uploaded yet, you may may make a PUT request to this URI to upload the document content.'
              format: uri
        relationships:
          type: object
          properties:
            task:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentTasks
      required:
        - id
        - type
    fulfillmentCreateAttachments:
      title: Fulfillment Create Attachments
      type: object
      description: Attachments can be created and deleted but not updated.
      properties:
        type:
          type: string
          enum:
            - tasks-fulfillmentAttachments
        attributes:
          type: object
          required:
            - filename
            - contentType
          properties:
            filename:
              type: string
              description: The name of the file with extention that should be presented to users
            contentType:
              type: string
              description: The MIME type used to describe the attached file's contents
            contentHash:
              type: string
              description: A MD5 hash of the file contents. This can be used to verify that the uploaded content matches your local version.
            visableToCustomer:
              type: boolean
              description: 'Indicates that this attachment can be viewed by customers. It only applies when the containing task is visable to customers as well. '
        relationships:
          type: object
          required:
            - task
          properties:
            task:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentTasks
      required:
        - type
        - attributes
        - relationships
    del-taskHistory:
      title: taskHistory
      type: object
      description: Provides a readonly list of each time the task was edited or a comment was made on it
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            user:
              type: string
              description: The display name of the user who took the action
            message:
              type: string
              description: 'A description of the event. '
            eventDate:
              type: string
              format: date-time
              description: The time at which the event occured
    assignee:
      title: assignee
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            displayName:
              type: string
    fulfillmentTasks:
      title: Fulfillment Tasks
      type: object
      description: The view of task data used by a fulfillment agent to track work to be done by themselves or a teammate.
      properties:
        id:
          type: string
        type:
          type: string
          description: The type of record being transmitted to indicate what attributes and relationships you may expect.
          enum:
            - tasks-fulfillmentTasks
        attributes:
          type: object
          properties:
            typeCode:
              type: string
              enum:
                - custom
                - listing
                - mention
                - socialPost
                - onboarding
                - socialize
                - googleQA
                - review
                - meeting
                - project
                - customSubtask
                - contentCallSubtask
                - clientReviewSubtask
                - scheduledSocialPostSubtask
              description: |-
                The type of task. You will most likely want to use "custome", "project" or "customeSubtask". The other types can only be created by the platform. 
                This can not be updated after creation.
            title:
              type: string
              maxLength: 255
              minLength: 1
              description: The summary/name displayed for the task. This is visable to customers.
            description:
              type: string
              maxLength: 4000
              minLength: 0
              description: Full details of the work to be completed. This field will not be displayed to customers.
            privateNotes:
              type: string
              description: Notes to be shared with other fufillment team members
              minLength: 0
              maxLength: 4000
            publicNotes:
              type: string
              description: Notes that will be made visable to anyone with access to this task.
              maxLength: 4000
              minLength: 0
            createdAt:
              type: string
              description: 'Readonly: The date the task was created. Will be set by the platform. '
              format: date-time
            modifiedAt:
              type: string
              description: 'Readonly: The last time the task was modified. Will be set by the platform. '
              format: date-time
            completedAt:
              type: string
              description: 'Readonly: The date the status of the task is updated to completed. It is set by the platform. It will be blank for all other statuses.'
              format: date-time
            dueAt:
              type: string
              description: The date that was set for a tast to be completed by. It defaults to 24 hours after the task was created.
              format: date-time
            version:
              type: integer
              description: 'Raedonly: A number that will be increased each time the task is modified. '
            typeName:
              type: string
              description: 'Readonly: Translated display name for the task type. Use typeCode to set the value.'
            visableToCustomer:
              type: boolean
              description: Can the customer that the task is being completed for view the details of the task
            complete:
              type: boolean
              description: 'Readonly: Indicates that this task and all subtasks have been completed. For projects if there are no subtasks the project will show as incomplete.'
            supportsSubtasks:
              type: boolean
              description: 'Readonly: Indicates that subtasks can be added to this record. Currently only true for `project` type tasks.'
            supportsCustomerFeedback:
              type: boolean
              description: 'Readonly: Indicates that this type of task can be sent to the customer to request feedback. Currently only true of subtasks.'
            enableCustomerFeedback:
              type: boolean
              description: Should the customer be allowed to approve or add comments to the task? This field will always be false when the task is not visable to the customer.
            customerFeedbackStatusCode:
              type: string
              description: 'Readonly: Set by the buyer'
              enum:
                - buyerRequestedChanges
                - buyerApproved
                - waitingOnBuyer
                - notEnabled
            customerFeedbackStatusName:
              type: string
              description: The translated status title
            dependentDaysToComplete:
              type: integer
              description: Applies only to tasks that have a dependsOn relationship with another task being completed before they can be started. This task will be due X days after the prior task is completed.
              minimum: 0
              maximum: 365
        relationships:
          type: object
          properties:
            attachments:
              type: object
              description: A reference to uploaded files relating to this task
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                        enum:
                          - tasks-fulfillmentAttachments
            assignee:
              type: object
              description: The user assigned to work on the task. Use the List Assignees endpoint to get the display name
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentAssignees
            customer:
              type: object
              description: |-
                The customer that requested the work to be done (Account)
                It can not be updated after creation.
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentCustomers
            status:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentStatuses
            owner:
              type: object
              description: |-
                The organization that created this task.
                It can not be updated after creation.
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentOrg
            subtasks:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - tasks-fulfillmentTasks
                      id:
                        type: string
                meta:
                  type: object
                  properties:
                    totalSubtasks:
                      type: integer
                    completedSubtasks:
                      type: integer
                links:
                  type: object
                  properties:
                    first:
                      type: string
                    prev:
                      type: string
                    next:
                      type: string
                    last:
                      type: string
            dependsOn:
              type: object
              description: |-
                A link to a subtask within the same project that must be completed before this task can be started. The due date of this task will be set based on the "DependentDaysToComplete" 
                It can not be updated to a task that has already been completed.
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentTasks
            project:
              type: object
              description: |-
                A link to the project that this task is a part of
                It can not be updated after creation.
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentTasks
                    id:
                      type: string
      required:
        - id
        - type
    fulfillmentCreateCustomSubtask:
      title: Fulfillment Create Custom Subtask
      type: object
      description: This model is a subset of "Fulfillment Tasks" used to document the specifics of creating a task within a project.
      properties:
        type:
          type: string
          description: The type of record being transmitted to indicate what attributes and relationships you may expect.
          enum:
            - tasks-fulfillmentTasks
        attributes:
          type: object
          properties:
            typeCode:
              type: string
              enum:
                - customSubtask
              description: |-
                The type of task. You will most likely want to use "custome", "project" or "customeSubtask". The other types can only be created by the platform. 
                This can not be updated after creation.
            title:
              type: string
              maxLength: 255
              minLength: 1
              description: The summary/name displayed for the task. This is visable to customers.
            description:
              type: string
              maxLength: 4000
              minLength: 0
              description: Full details of the work to be completed. This field will not be displayed to customers.
            privateNotes:
              type: string
              description: Notes to be shared with other fufillment team members
              minLength: 0
              maxLength: 4000
            publicNotes:
              type: string
              description: Notes that will be made visable to anyone with access to this task.
              maxLength: 4000
              minLength: 0
            dueAt:
              type: string
              description: The date that was set for a tast to be completed by. It defaults to 24 hours after the task was created.
              format: date-time
            visableToCustomer:
              type: boolean
              description: Can the customer that the task is being completed for view the details of the task
            enableCustomerFeedback:
              type: boolean
              description: Should the customer be allowed to approve or add comments to the task? This field will always be false when the task is not visable to the customer.
            customerFeedbackStatusCode:
              type: string
              description: 'Readonly: Set by the buyer'
              enum:
                - buyerRequestedChanges
                - buyerApproved
                - waitingOnBuyer
                - notEnabled
            dependentDaysToComplete:
              type: integer
              description: Applies only to tasks that have a dependsOn relationship with another task being completed before they can be started. This task will be due X days after the prior task is completed.
              minimum: 0
              maximum: 365
          required:
            - typeCode
            - title
        relationships:
          type: object
          properties:
            assignee:
              type: object
              description: The user assigned to work on the task. Use the List Assignees endpoint to get the display name
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentAssignees
                  required:
                    - id
                    - type
            status:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentStatuses
                  required:
                    - id
                    - type
            dependsOn:
              type: object
              description: |-
                A link to a subtask within the same project that must be completed before this task can be started. The due date of this task will be set based on the "DependentDaysToComplete" 
                It can not be updated to a task that has already been completed.
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentTasks
            project:
              type: object
              description: |-
                A link to the project that this task is a part of
                It can not be updated after creation.
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentTasks
                    id:
                      type: string
          required:
            - project
      required:
        - type
    fulfillmentCreateProject:
      title: Fulfillment Create Project
      type: object
      description: This model is a subset of "Fulfillment Tasks" used to document the specifics of creating a project.
      properties:
        type:
          type: string
          description: The type of record being transmitted to indicate what attributes and relationships you may expect.
          enum:
            - tasks-fulfillmentTasks
        attributes:
          type: object
          properties:
            typeCode:
              type: string
              enum:
                - project
              description: |-
                The type of task. You will most likely want to use "custome", "project" or "customeSubtask". The other types can only be created by the platform. 
                This can not be updated after creation.
            title:
              type: string
              maxLength: 255
              minLength: 1
              description: The summary/name displayed for the task. This is visable to customers.
            description:
              type: string
              maxLength: 4000
              minLength: 0
              description: Full details of the work to be completed. This field will not be displayed to customers.
            dueAt:
              type: string
              description: The date that was set for a tast to be completed by. It defaults to 24 hours after the task was created.
              format: date-time
            visableToCustomer:
              type: boolean
              description: Can the customer that the task is being completed for view the details of the task
          required:
            - typeCode
            - title
        relationships:
          type: object
          properties:
            assignee:
              type: object
              description: The user assigned to work on the task. Use the List Assignees endpoint to get the display name
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentAssignees
            customer:
              type: object
              description: |-
                The customer that requested the work to be done (Account)
                It can not be updated after creation.
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentCustomers
            status:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentStatuses
            owner:
              type: object
              description: |-
                The organization that created this task.
                It can not be updated after creation.
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentOrg
          required:
            - customer
            - owner
      required:
        - type
    fulfillmentCreateCustomTask:
      title: Fulfillment Create Custom Task
      type: object
      description: This model is a subset of "Fulfillment Tasks" used to document the specifics of creating a Custom top level task.
      properties:
        type:
          type: string
          description: The type of record being transmitted to indicate what attributes and relationships you may expect.
          enum:
            - tasks-fulfillmentTasks
        attributes:
          type: object
          properties:
            typeCode:
              type: string
              enum:
                - custom
              description: |-
                The type of task. You will most likely want to use "custome", "project" or "customeSubtask". The other types can only be created by the platform. 
                This can not be updated after creation.
            title:
              type: string
              maxLength: 255
              minLength: 1
              description: The summary/name displayed for the task. This is visable to customers.
            description:
              type: string
              maxLength: 4000
              minLength: 0
              description: Full details of the work to be completed. This field will not be displayed to customers.
            privateNotes:
              type: string
              description: Notes to be shared with other fufillment team members
              minLength: 0
              maxLength: 4000
            publicNotes:
              type: string
              description: Notes that will be made visable to anyone with access to this task.
              maxLength: 4000
              minLength: 0
            dueAt:
              type: string
              format: date-time
              description: The date that was set for a tast to be completed by. It defaults to 24 hours after the task was created.
        relationships:
          type: object
          properties:
            assignee:
              type: object
              description: The user assigned to work on the task. Use the List Assignees endpoint to get the display name
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentAssignees
            customer:
              type: object
              description: |-
                The customer that requested the work to be done (Account)
                It can not be updated after creation.
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentCustomers
            status:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentStatuses
            owner:
              type: object
              description: |-
                The organization that created this task.
                It can not be updated after creation.
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                      enum:
                        - tasks-fulfillmentOrg
          required:
            - customer
            - owner
      required:
        - type
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://sso-api-demo.apigateway.co/oauth2/auth'
          tokenUrl: 'https://sso-api-demo.apigateway.co/oauth2/token'
          scopes:
            task: Grants the user access to read or write tasks
            'task:read': Grants read only access to tasks
      description: ''
